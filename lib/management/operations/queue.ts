/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/queueMappers";
import * as Parameters from "../models/parameters";
import { ServiceBusManagementClientContext } from "../serviceBusManagementClientContext";

/** Class representing a Queue. */
export class Queue {
  private readonly client: ServiceBusManagementClientContext;

  /**
   * Create a Queue.
   * @param {ServiceBusManagementClientContext} client Reference to the service client.
   */
  constructor(client: ServiceBusManagementClientContext) {
    this.client = client;
  }

  /**
   * Get the details about the queue found at the provided queuePath.
   * @param namespaceName The name of the ServiceBus namespace to send requests to.
   * @param queuePath The path to the queue relative to the ServiceBus namespace.
   * @param enrich A constant query parameter that sets "enrich=False".
   * @param [options] The optional parameters
   * @returns Promise<Models.QueueGetResponse>
   */
  get(namespaceName: string, queuePath: string, enrich: string, options?: msRest.RequestOptionsBase): Promise<Models.QueueGetResponse>;
  /**
   * @param namespaceName The name of the ServiceBus namespace to send requests to.
   * @param queuePath The path to the queue relative to the ServiceBus namespace.
   * @param enrich A constant query parameter that sets "enrich=False".
   * @param callback The callback
   */
  get(namespaceName: string, queuePath: string, enrich: string, callback: msRest.ServiceCallback<Models.GetQueueResponse>): void;
  /**
   * @param namespaceName The name of the ServiceBus namespace to send requests to.
   * @param queuePath The path to the queue relative to the ServiceBus namespace.
   * @param enrich A constant query parameter that sets "enrich=False".
   * @param options The optional parameters
   * @param callback The callback
   */
  get(namespaceName: string, queuePath: string, enrich: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.GetQueueResponse>): void;
  get(namespaceName: string, queuePath: string, enrich: string, options?: msRest.RequestOptionsBase, callback?: msRest.ServiceCallback<Models.GetQueueResponse>): Promise<Models.QueueGetResponse> {
    return this.client.sendOperationRequest(
      {
        namespaceName,
        queuePath,
        enrich,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.QueueGetResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers, true);
const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "{queuePath}/",
  urlParameters: [
    Parameters.namespaceName,
    Parameters.queuePath
  ],
  queryParameters: [
    Parameters.apiVersion,
    Parameters.enrich
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.GetQueueResponse
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  isXML: true,
  serializer
};
